<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruitment.dao.ResumeMapper" >
  <resultMap id="BaseResultMap" type="com.recruitment.domain.Resume" >
    <id column="resume_id" property="resumeId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="workage" property="workage" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="work_status" property="workStatus" jdbcType="INTEGER" />
    <result column="advantage" property="advantage" jdbcType="VARCHAR" />
    <result column="hide" property="hide" javaType="INTEGER"/>
    <result column="info1" property="info1" jdbcType="VARCHAR" />
    <result column="info2" property="info2" jdbcType="VARCHAR" />
    <result column="info3" property="info3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    resume_id, user_id, workage, status, work_status, advantage, info1, info2, info3
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </select>
    resume_id, user_id, workage, status, work_status, advantage,hide, info1, info2, info3
  </sql>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from resume
    where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <!--<select id="findHideById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    hide
    from resume
    where user_id = #{userId,jdbcType=INTEGER}
  </select>-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.recruitment.domain.Resume" >
    insert into resume (resume_id, user_id, workage, 
      status, work_status, advantage,
      info1, info2, info3
      )
    values (#{resumeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{workage,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{workStatus,jdbcType=INTEGER}, #{advantage,jdbcType=VARCHAR},
      status, work_status, advantage, hide,
      info1, info2, info3
      )
    values (#{resumeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{workage,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{workStatus,jdbcType=INTEGER}, #{advantage,jdbcType=VARCHAR},  #{hide,jdbcType=INTEGER}
      #{info1,jdbcType=VARCHAR}, #{info2,jdbcType=VARCHAR}, #{info3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.recruitment.domain.Resume" >
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resumeId != null" >
        resume_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="workage != null" >
        workage,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="workStatus != null" >
        work_status,
      </if>
      <if test="advantage != null" >
        advantage,
      </if>

      <if test="hide != null" >
        hide,
      </if>
      <if test="info1 != null" >
        info1,
      </if>
      <if test="info2 != null" >
        info2,
      </if>
      <if test="info3 != null" >
        info3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resumeId != null" >
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="workage != null" >
        #{workage,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="workStatus != null" >
        #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="advantage != null" >
        #{advantage,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        #{hide,jdbcType=INTEGER},
      </if>
      <if test="info1 != null" >
        #{info1,jdbcType=VARCHAR},
      </if>
      <if test="info2 != null" >
        #{info2,jdbcType=VARCHAR},
      </if>
      <if test="info3 != null" >
        #{info3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruitment.domain.Resume" >
  <update id="updateHide" parameterType="com.recruitment.domain.Resume" >
    update resume
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="workage != null" >
        workage = #{workage,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="workStatus != null" >
        work_status = #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="advantage != null" >
        advantage = #{advantage,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        hide = #{hide,jdbcType=INTEGER},
      </if>
      <if test="info1 != null" >
        info1 = #{info1,jdbcType=VARCHAR},
      </if>
      <if test="info2 != null" >
        info2 = #{info2,jdbcType=VARCHAR},
      </if>
      <if test="info3 != null" >
        info3 = #{info3,jdbcType=VARCHAR},
      </if>
    </set>
    where resume_id = #{resumeId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruitment.domain.Resume" >
    update resume
    set user_id = #{userId,jdbcType=INTEGER},
      workage = #{workage,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      work_status = #{workStatus,jdbcType=INTEGER},
      advantage = #{advantage,jdbcType=VARCHAR},
       hide = #{hide,jdbcType=INTEGER},
      info1 = #{info1,jdbcType=VARCHAR},
      info2 = #{info2,jdbcType=VARCHAR},
      info3 = #{info3,jdbcType=VARCHAR}
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </update>
</mapper>